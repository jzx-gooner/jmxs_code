################################################################################
# Copyright (c) 2018-2020, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

[application]
enable-perf-measurement=1
perf-measurement-interval-sec=5
#gie-kitti-output-dir=/home/cookoo/detection_result

[tiled-display]
enable=0
rows=2
columns=2
width=1280
height=720
gpu-id=0
nvbuf-memory-type=0
#(0): nvbuf-mem-default - Default memory allocated, specific to particular platform
#(1): nvbuf-mem-cuda-pinned - Allocate Pinned/Host cuda memory, applicable for Tesla
#(2): nvbuf-mem-cuda-device - Allocate Device cuda memory, applicable for Tesla
#(3): nvbuf-mem-cuda-unified - Allocate Unified cuda memory, applicable for Tesla
#(4): nvbuf-mem-surface-array - Allocate Surface Array memory, applicable for Jetson

[source0]
enable=1
type=3 #Type-1=CameraV4L2 2=URI 3=MultiURI 4:RTSP
uri=file://../../../../../samples/streams/face_tracker.mp4
#uri=rtsp://admin:sgai123456@192.168.228.25:554/Streaming/Channels/1
num-sources=1 #only type3 use
gpu-id=0
cudadec-memtype=0
latency=200 #only for rtsp
drop-frame-interval=5

[source1]
enable=1
type=3 #Type-1=CameraV4L2 2=URI 3=MultiURI 4:RTSP
uri=file://../../../../../samples/streams/face_tracker.mp4
num-sources=1 #only type3 use
gpu-id=0
cudadec-memtype=0
latency=200 #only for rtsp
drop-frame-interval=5

[source2]
enable=1
type=3 #Type-1=CameraV4L2 2=URI 3=MultiURI 4:RTSP
uri=file://../../../../../samples/streams/sample_1080p_h264.mp4
num-sources=1 #only type3 use
gpu-id=0
cudadec-memtype=0
latency=200 #only for rtsp
drop-frame-interval=5

[source3]
enable=0
type=4 #Type-1=CameraV4L2 2=URI 3=MultiURI 4:RTSP
uri=rtsp://admin:sgai123456@192.168.228.25:554/Streaming/Channels/1
num-sources=1 #only type3 use
gpu-id=0
cudadec-memtype=0
latency=200 #only for rtsp
#drop-frame-interval=3

[sink0]
enable=0
type=1
#h.264
codec=1
#0-gpu
enc-type=0
#0:as fast as it can
sync=0
#jetson only set 0
#nvbuf-memory-type=0


[sink1]
enable=0
#Type - 1=FakeSink 2=EglSink 3=File 4=UDPSink 5=nvoverlaysink 6=MsgConvBroker
type=1
msg-conv-config=dstest5_msgconv_sample_config.txt
#(0): PAYLOAD_DEEPSTREAM - Deepstream schema payload
#(1): PAYLOAD_DEEPSTREAM_MINIMAL - Deepstream schema payload minimal
#(256): PAYLOAD_RESERVED - Reserved type
#(257): PAYLOAD_CUSTOM   - Custom schema payload
msg-conv-payload-type=0
msg-broker-proto-lib=/opt/nvidia/deepstream/deepstream-5.1/lib/libnvds_kafka_proto.so
#Provide your msg-broker-conn-str here
msg-broker-conn-str=localhost;9092;quickstart-events
#topic=<topic>
#Optional:
#msg-broker-config=../../deepstream-test4/cfg_kafka.txt


[sink2]
enable=0
type=1
codec=1
enc-type=1
sync=0
bitrate=10000
rtsp-port=8554
udp-port=5400
source-id=0
link-to-demux=1

[sink3]
enable=0
type=1
codec=1
enc-type=1
sync=0
#1=mp4,2=mkv
bitrate=10000
rtsp-port=8555
udp-port=5401
source-id=1
link-to-demux=1

[sink4]
enable=0
type=1
codec=1
enc-type=1
sync=0
bitrate=10000
rtsp-port=8556
udp-port=5402
source-id=2
link-to-demux=1

[sink5]
enable=0
type=1
container=1
codec=1
enc-type=1
sync=0
bitrate=10000
rtsp-port=8557
udp-port=5403
source-id=3
link-to-demux=1


[osd]
enable=0
gpu-id=0
border-width=3
text-size=15
text-color=1;1;1;1;
text-bg-color=0.3;0.3;0.3;1
font=Arial
show-clock=0
clock-x-offset=800
clock-y-offset=820
clock-text-size=12
clock-color=1;0;0;0
nvbuf-memory-type=0
#process-mode=2 #jetson only

[streammux]
gpu-id=0
live-source=1 ##Boolean property to inform muxer that sources are live if rtsp set 1
batch-size=4
batched-push-timeout=40000 ##time out in usec, to wait after the first buffer is available ##to push the batch even if the complete batch is not formed
width=752  ## Set muxer output width and height
height=480 ## Set muxer output width and height
enable-padding=0 ##Enable to maintain aspect ratio wrt source, and allow black borders, works ##along with width, height properties
nvbuf-memory-type=0 #only o for jetson
# attach-sys-ts-as-ntp=1 ## If set to TRUE, system timestamp will be attached as ntp timestamp ## If set to FALSE, ntp timestamp from rtspsrc, if available, will be attached

[primary-gie]
enable=1
gpu-id=0
batch-size=4
#rgba
#bbox-border-color0=1;0;0;1
bbox-border-color1=0;1;0;1
bbox-border-color2=0;0;1;1
bbox-border-color3=1;1;1;1
bbox-border-color4=0;0;0;1
bbox-border-color5=0;1;1;1
nvbuf-memory-type=0
#interval=4
gie-unique-id=1
model-engine-file=model_b4_gpu0_fp16.engine
labelfile-path=objectDetector_Yolo/labels.txt
config-file=objectDetector_Yolo/config_infer_primary_yoloV3.txt
#infer-raw-output-dir=../../../../../samples/primary_detector_raw_output/

[tracker]
enable=0
tracker-width=640
tracker-height=288
ll-lib-file=/opt/nvidia/deepstream/deepstream-5.0/lib/libnvds_nvdcf.so
#ll-config-file required for DCF/IOU only
ll-config-file=tracker_config.yml
#ll-config-file=iou_config.txt
gpu-id=0
#enable-batch-process applicable to DCF only
enable-batch-process=0


[nvds-analytics]
enable=0
config-file=config_nvdsanalytics.txt

[tests]
file-loop=1
